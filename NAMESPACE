# Generated by roxygen2: do not edit by hand

S3method(augment,ARIMA)
S3method(augment,ETS)
S3method(augment,NNETAR)
S3method(augment,RW)
S3method(augment,TSLM)
S3method(augment,model_mean)
S3method(coef,ETS)
S3method(components,ETS)
S3method(fitted,ARIMA)
S3method(fitted,ETS)
S3method(fitted,NNETAR)
S3method(fitted,RW)
S3method(fitted,TSLM)
S3method(fitted,model_mean)
S3method(forecast,ARIMA)
S3method(forecast,ETS)
S3method(forecast,NNETAR)
S3method(forecast,RW)
S3method(forecast,TSLM)
S3method(forecast,model_mean)
S3method(glance,ARIMA)
S3method(glance,ETS)
S3method(glance,NNETAR)
S3method(glance,RW)
S3method(glance,TSLM)
S3method(glance,model_mean)
S3method(imitate,ETS)
S3method(imitate,NNETAR)
S3method(imitate,RW)
S3method(imitate,TSLM)
S3method(imitate,model_mean)
S3method(interpolate,TSLM)
S3method(model_sum,ARIMA)
S3method(model_sum,Arima)
S3method(model_sum,ETS)
S3method(model_sum,NNETAR)
S3method(model_sum,RW)
S3method(model_sum,TSLM)
S3method(model_sum,model_mean)
S3method(refit,ETS)
S3method(refit,TSLM)
S3method(report,ARIMA)
S3method(report,ETS)
S3method(report,NNETAR)
S3method(report,RW)
S3method(report,TSLM)
S3method(residuals,ARIMA)
S3method(residuals,ETS)
S3method(residuals,NNETAR)
S3method(residuals,RW)
S3method(residuals,TSLM)
S3method(residuals,model_mean)
S3method(summary,ETS)
S3method(tidy,ARIMA)
S3method(tidy,ETS)
S3method(tidy,NNETAR)
S3method(tidy,RW)
S3method(tidy,TSLM)
S3method(tidy,model_mean)
export("%>%")
export(ARIMA)
export(BoxCox)
export(ETS)
export(InvBoxCox)
export(MEAN)
export(NAIVE)
export(NNETAR)
export(RW)
export(SNAIVE)
export(TSLM)
export(as_tsibble)
import(Rcpp)
import(fablelite)
import(rlang, except = invoke)
import(tsibble)
importFrom(fablelite,forecast)
importFrom(fablelite,imitate)
importFrom(stats,approx)
importFrom(stats,ar)
importFrom(stats,coef)
importFrom(stats,complete.cases)
importFrom(stats,formula)
importFrom(stats,lm)
importFrom(stats,model.frame)
importFrom(stats,model.matrix)
importFrom(stats,na.omit)
importFrom(stats,predict)
importFrom(stats,qnorm)
importFrom(stats,residuals)
importFrom(stats,sd)
importFrom(stats,stl)
importFrom(stats,time)
importFrom(stats,ts)
importFrom(stats,var)
importFrom(tsibble,"%>%")
importFrom(utils,tail)
useDynLib(fable, .registration = TRUE)
